@property --hue {
    syntax: '<integer>';
    inherits: true;
    initial-value: 0;
  }

:root {
    --color-color1: #fff4d2;
    --color-color2: #e9f79b;
    --color-negro: #333;
    --color-blanco: #fff;
    --perspective: 1000;
    --cuboid-height: 14;
    --cuboid-width: 14;
    --cuboid-depth: 14;
    --speed: 1.2s;
    --x: 0;
    --y: 0;
    --z: 7;
    --rotate-x: -30;
    --rotate-y: -24;
    --plane-width: 14;
    --plane-height: 14;
    --rotate-cuboid-x: 0;
    --rotate-cuboid-y: 0;
    --rotate-cuboid-z: 0;
}

/* Estilos generales */
body {
    margin: 0;
    background: linear-gradient(to bottom right, var(--color-color1), var(--color-color2));
    color: var(--color-blanco);
    overflow-x: hidden;
    height: 2100px;
    justify-content: center;
    align-items: center;
    font-family: verdana;
    text-align: center;
}


#headerArriba {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    padding: 10px;
    z-index: 1;
    background-color: var(--color-negro);
    border-bottom: 3px solid var(--color-color1);
    box-shadow: 0px 3px 8px 0px rgba(0, 0, 0, 0.75);
    height: 85px;
}

#Dia {
    margin-top: 320px;
    font-size: 48px;
    font-weight: bold;
    text-align: center;
    margin: 50px 0;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.3);
    color: var(--color-color1);
    -webkit-text-stroke: 1px black;
    text-shadow: 1px black;
}

#headerArriba>h2 {
    animation: slideInLeft 1s ease-in-out;
    text-align: center;
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Estilos para p치rrafos */
#headerArriba>p {
    font-size: 20px;
    line-height: 1.5;
    margin-bottom: 20px;
    padding: 10px;
    animation-name: fadeIn;
    animation-duration: 1s;
    animation-fill-mode: both;
    margin-left: 30px;
    margin-right: 300px;
}

/* Animaci칩n para p치rrafos */
@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

#headerArriba>nav {
    text-align: center;
}

#headerArriba>nav ul {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0;
    margin: 0;
    list-style-type: none;
    background-color: #1c1c1c;
    font-family: sans-serif;
    font-size: 18px;
    border-bottom: 1px solid #8c8c8c;
    box-shadow: 0 1px 5px rgba(0, 0, 0, .15);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 999;
}

#headerArriba>nav ul li a {
    display: block;
    padding: 20px;
    color: #fff;
    text-decoration: none;
    text-transform: uppercase;
    transition: background-color .3s, border-radius .3s;
    border-radius: 20px;
}

#headerArriba>nav ul li a:hover {
    background-color: #8c8c8c;
    color: #1c1c1c;
    transition: background-color .3s, border-radius .3s;
    border-radius: 1;
}

/* Estilos para el banner */
.banner {
    position: fixed;
    top: 33%;
    right: 0;
    transform: translateY(-50%);
    background-color: var(--color-blanco);
    border: 1px solid var(--color-negro);
    padding: 10px;
    width: 200px;
    border-radius: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    margin-right: 30px;
}

/* Estilos para el texto del banner */
.banner p {
    margin: 0;
    padding: 5px 0;
    font-size: 14px;
    color: var(--color-negro);
    text-align: center;
}

/* Animaci칩n para el banner */
@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

.banner {
    animation: slideInRight 1s ease-in-out;
}

.progress-bar-container {
    width: 200px;
    height: 20px;
    border: 1px solid black;
    margin: 10px auto;
    position: relative;
    border-radius: 5px;
}

.progress-bar {
    width: 0%;
    height: 100%;
    background-color: green;
    position: absolute;
    top: 0;
    left: 0;
    transition: width 0.5s ease;
}

.progress-bar-indicator {
    color: black;
    width: 50px;
    height: 50px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20px;
    text-align: center;
    line-height: 50px;
}



















.scene {
    perspective: calc(var(--perspective, 800) * 1px);
    transform-style: preserve-3d;
    height: 100vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .plane {
    height: calc(var(--plane-height, 25) * 1vmin);
    width: calc(var(--plane-width, 25) * 1vmin);
    transform-style: preserve-3d;
    transform: rotateX(calc(var(--rotate-x, -24) * 1deg)) rotateY(calc(var(--rotate-y, -24) * 1deg)) rotateX(90deg);
  }
  .cuboid {
    --width: var(--cuboid-width, 15);
    --height: var(--cuboid-height, 10);
    --depth: var(--cuboid-depth, 4);
    height: calc(var(--depth) * 1vmin);
    width: calc(var(--width) * 1vmin);
    transform-style: preserve-3d;
    position: absolute;
    transform: translate3d(calc(var(--x, 4) * 1vmin), calc(var(--y, 5) * 1vmin), calc(var(--z, 0) * 1vmin)) rotateX(-90deg) rotateY(calc(var(--rotate-cuboid-y, 0) * 1deg)) rotateZ(calc(var(--rotate-cuboid-z, 0) * 1deg));
  }
  .cuboid > div:nth-of-type(1) {
    height: calc(var(--height) * 1vmin);
    width: 100%;
    transform-origin: 50% 50%;
    transform: rotateX(-90deg);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotateX(-90deg) translate3d(0, 0, calc((var(--depth) / 2) * 1vmin));
  }
  .cuboid > div:nth-of-type(2) {
    height: calc(var(--height) * 1vmin);
    width: 100%;
    transform-origin: 50% 50%;
    transform: translate(-50%, -50%) rotateX(-90deg) rotateY(180deg) translate3d(0, 0, calc((var(--depth) / 2) * 1vmin));
    position: absolute;
    top: 50%;
    left: 50%;
  }
  .cuboid > div:nth-of-type(3) {
    height: calc(var(--height) * 1vmin);
    width: calc(var(--depth) * 1vmin);
    transform: translate(-50%, -50%) rotateX(-90deg) rotateY(90deg) translate3d(0, 0, calc((var(--width) / 2) * 1vmin));
    position: absolute;
    top: 50%;
    left: 50%;
  }
  .cuboid > div:nth-of-type(4) {
    height: calc(var(--height) * 1vmin);
    width: calc(var(--depth) * 1vmin);
    transform: translate(-50%, -50%) rotateX(-90deg) rotateY(-90deg) translate3d(0, 0, calc((var(--width) / 2) * 1vmin));
    position: absolute;
    top: 50%;
    left: 50%;
  }
  .cuboid > div:nth-of-type(5) {
    height: calc(var(--depth) * 1vmin);
    width: calc(var(--width) * 1vmin);
    transform: translate(-50%, -50%) translate3d(0, 0, calc((var(--height) / 2) * 1vmin));
    position: absolute;
    top: 50%;
    left: 50%;
  }
  .cuboid > div:nth-of-type(6) {
    height: calc(var(--depth) * 1vmin);
    width: calc(var(--width) * 1vmin);
    transform: translate(-50%, -50%) translate3d(0, 0, calc((var(--height) / 2) * -1vmin)) rotateX(180deg);
    position: absolute;
    top: 50%;
    left: 50%;
  }
  .demo-cuboid > div {
    background: hsl(180, 50%, calc(var(--lightness, 50) * 1%));
  }
  .demo-cuboid > div:nth-of-type(1),
  .demo-cuboid > div:nth-of-type(5) {
    --lightness: 40;
  }
  .demo-cuboid > div:nth-of-type(2),
  .demo-cuboid > div:nth-of-type(4) {
    --lightness: 50;
  }
  .demo-cuboid > div:nth-of-type(3) {
    --lightness: 60;
  }
  .cube-shadow {
    height: 100%;
    width: 100%;
    background: #40bfbf;
    filter: blur(15px);
    position: absolute;
  }
  .cube-spin,
  .cube-squish,
  .cube-wrap {
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
  }
  .cuboid__mouth {
    position: absolute;
    height: 3vmin;
    width: 3vmin;
    border-radius: 50%;
    background: #000;
    overflow: hidden;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    clip-path: inset(50% 0 0 0);
    -webkit-clip-path: inset(50% 0 0 0);
  }
  .cuboid__mouth:after {
    content: '';
    height: 35%;
    width: 45%;
    border-radius: 50%;
    position: absolute;
    bottom: -10%;
    right: 0;
    background: #e63b19;
  }
  .cuboid__eyes {
    width: 80%;
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, 0%);
    -webkit-animation: blink 5s infinite;
            animation: blink 5s infinite;
  }
  .cuboid__eyes > div {
    height: 2vmin;
    width: 2vmin;
    border-radius: 50%;
    background: #000;
    position: absolute;
    transform: translate(0, -50%);
  }
  .cuboid__eyes > div:after {
    content: '';
    background: #fff;
    height: 20%;
    width: 20%;
    border-radius: 50%;
    position: absolute;
    top: 20%;
    left: 20%;
  }
  .cuboid__eyes > div:nth-of-type(1) {
    left: 0;
  }
  .cuboid__eyes > div:nth-of-type(2) {
    right: 0;
  }
  :checked ~ .scene {
    -webkit-animation: party var(--speed) infinite linear;
            animation: party var(--speed) infinite linear;
  }
  :checked ~ .scene .cuboid {
    -webkit-animation: flip calc(var(--speed) * 2) infinite ease-out;
            animation: flip calc(var(--speed) * 2) infinite ease-out;
  }
  :checked ~ .scene .cube-shadow {
    -webkit-animation: shadow var(--speed) infinite ease-out;
            animation: shadow var(--speed) infinite ease-out;
  }
  :checked ~ .scene .cube-spin {
    -webkit-animation: spin calc(var(--speed) * 2) var(--speed) infinite ease-out;
            animation: spin calc(var(--speed) * 2) var(--speed) infinite ease-out;
  }
  :checked ~ .scene .cube-squish {
    -webkit-animation: squish var(--speed) infinite ease-out;
            animation: squish var(--speed) infinite ease-out;
  }
  :checked ~ .scene .cube-wrap {
    -webkit-animation: jump var(--speed) infinite ease-out;
            animation: jump var(--speed) infinite ease-out;
  }
  :checked ~ .scene .cube-shadow {
    background: hsla(var(--hue, 0), 80%, 50%, 0.5);
  }
  :checked ~ .scene .demo-cuboid > div {
    background: hsl(var(--hue, 0), 80%, calc(var(--lightness, 50) * 1%));
  }
  :checked ~ label {
    --on: 1;
  }
  :checked ~ label span {
    -webkit-animation: rock 0.1s infinite linear alternate;
            animation: rock 0.1s infinite linear alternate;
  }
  input {
    opacity: 0;
    height: 0;
    width: 0;
    position: fixed;
    left: 100%;
  }
  label {
    --on: 0;
    height: 2rem;
    width: 4rem;
    background: transparent;
    border-radius: 25%/50%;
    border: 2px solid #fff;
    display: block;
    position: absolute;
    top: 80%;
    left: 50%;
    transform: translate(-50%, -50%);
    filter: grayscale(calc(1 - var(--on)));
    cursor: pointer;
    z-index: 2;
  }
  span {
    display: inline-block;
    font-size: 2rem;
    line-height: 2rem;
    transform: translate(calc(var(--on) * 100%), 0);
    transition: transform 0.1s, filter 0.1s;
  }
  @-webkit-keyframes spin {
    0%, 10% {
      transform: rotate(0deg);
    }
    40%, 50%, 100% {
      transform: rotate(360deg);
    }
  }
  @keyframes spin {
    0%, 10% {
      transform: rotate(0deg);
    }
    40%, 50%, 100% {
      transform: rotate(360deg);
    }
  }
  @-webkit-keyframes flip {
    0%, 10% {
      transform: translate3d(calc(var(--x, 0) * 1vmin), calc(var(--y, 0) * 1vmin), calc(var(--z, 5) * 1vmin)) rotateX(-90deg) rotateY(calc(var(--rotate-cuboid-y, 0) * 1deg)) rotateZ(calc(var(--rotate-cuboid-z, 0) * 1deg));
    }
    40%, 50%, 100% {
      transform: translate3d(calc(var(--x, 0) * 1vmin), calc(var(--y, 0) * 1vmin), calc(var(--z, 5) * 1vmin)) rotateX(270deg) rotateY(calc(var(--rotate-cuboid-y, 0) * 1deg)) rotateZ(calc(var(--rotate-cuboid-z, 0) * 1deg));
    }
  }
  @keyframes flip {
    0%, 10% {
      transform: translate3d(calc(var(--x, 0) * 1vmin), calc(var(--y, 0) * 1vmin), calc(var(--z, 5) * 1vmin)) rotateX(-90deg) rotateY(calc(var(--rotate-cuboid-y, 0) * 1deg)) rotateZ(calc(var(--rotate-cuboid-z, 0) * 1deg));
    }
    40%, 50%, 100% {
      transform: translate3d(calc(var(--x, 0) * 1vmin), calc(var(--y, 0) * 1vmin), calc(var(--z, 5) * 1vmin)) rotateX(270deg) rotateY(calc(var(--rotate-cuboid-y, 0) * 1deg)) rotateZ(calc(var(--rotate-cuboid-z, 0) * 1deg));
    }
  }
  @-webkit-keyframes squish {
    0%, 100% {
      transform: scaleZ(1) scale(1);
    }
    15% {
      transform: scaleZ(0.5) scale(1.15);
    }
    50%, 85% {
      transform: scaleZ(1.25) scale(0.5);
    }
  }
  @keyframes squish {
    0%, 100% {
      transform: scaleZ(1) scale(1);
    }
    15% {
      transform: scaleZ(0.5) scale(1.15);
    }
    50%, 85% {
      transform: scaleZ(1.25) scale(0.5);
    }
  }
  @-webkit-keyframes jump {
    0%, 100% {
      transform: translate3d(0, 0, 0);
    }
    15%, 95% {
      transform: translate3d(0, 0, 0);
    }
    50% {
      transform: translate3d(0, 0, 20vmin);
    }
  }
  @keyframes jump {
    0%, 100% {
      transform: translate3d(0, 0, 0);
    }
    15%, 95% {
      transform: translate3d(0, 0, 0);
    }
    50% {
      transform: translate3d(0, 0, 20vmin);
    }
  }
  @-webkit-keyframes shadow {
    0%, 15%, 85%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    25%, 75% {
      transform: scale(0.65);
      opacity: 0.35;
    }
  }
  @keyframes shadow {
    0%, 15%, 85%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    25%, 75% {
      transform: scale(0.65);
      opacity: 0.35;
    }
  }
  @-webkit-keyframes blink {
    0%, 47%, 49%, 51%, 100% {
      transform: translate(-50%, -100%) scaleY(1);
    }
    48%, 50% {
      transform: translate(-50%, -100%) scaleY(0.1);
    }
  }
  @keyframes blink {
    0%, 47%, 49%, 51%, 100% {
      transform: translate(-50%, -100%) scaleY(1);
    }
    48%, 50% {
      transform: translate(-50%, -100%) scaleY(0.1);
    }
  }
  @-webkit-keyframes party {
    to {
      --hue: 360;
    }
  }
  @keyframes party {
    to {
      --hue: 360;
    }
  }
  @-webkit-keyframes rock {
    0% {
      transform: translate(calc(var(--on) * 100%), 0) rotate(-5deg);
    }
    100% {
      transform: translate(calc(var(--on) * 100%), 0) rotate(5deg);
    }
  }
  @keyframes rock {
    0% {
      transform: translate(calc(var(--on) * 100%), 0) rotate(-5deg);
    }
    100% {
      transform: translate(calc(var(--on) * 100%), 0) rotate(5deg);
    }
  }